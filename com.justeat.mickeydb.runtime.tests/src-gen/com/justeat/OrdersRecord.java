/*
 * Generated by Robotoworks Mechanoid
 */
package com.justeat;

import android.content.ContentResolver;
import android.database.Cursor;
import android.os.Bundle;
import android.os.Parcel;
import android.os.Parcelable;
import android.net.Uri;
import com.justeat.TakeawaysDBContract.Orders;
import com.justeat.TakeawaysDBContract.Orders.Builder;
import com.robotoworks.mechanoid.util.Closeables;
import com.robotoworks.mechanoid.db.ActiveRecord;
import com.robotoworks.mechanoid.db.ActiveRecordFactory;
import com.robotoworks.mechanoid.Mechanoid;
import com.robotoworks.mechanoid.db.AbstractValuesBuilder;

public class OrdersRecord extends ActiveRecord implements Parcelable {

	private static ActiveRecordFactory<OrdersRecord> sFactory = new ActiveRecordFactory<OrdersRecord>() {
		@Override
		public OrdersRecord create(Cursor c) {
			return fromCursor(c);
		}
		
		@Override
		public String[] getProjection() {
			return PROJECTION;
		}

        @Override
                    public Uri getContentUri() {
                        return Orders.CONTENT_URI;
                    }
                };

    			public static ActiveRecordFactory<OrdersRecord> getFactory() {
		return sFactory;
	}

    public static final Parcelable.Creator<OrdersRecord> CREATOR 
    	= new Parcelable.Creator<OrdersRecord>() {
        public OrdersRecord createFromParcel(Parcel in) {
            return new OrdersRecord(in);
        }

        public OrdersRecord[] newArray(int size) {
            return new OrdersRecord[size];
        }
    };
    
    public static String[] PROJECTION = {
    	Orders._ID,
    	Orders.RESTAURANT_JEID,
    	Orders.RESTAURANT_NAME,
    	Orders.RESTAURANT_ADDRESS,
    	Orders.RESTAURANT_CITY,
    	Orders.RESTAURANT_POSTCODE,
    	Orders.RESTAURANT_LOGO_STANDARD_RES_URL,
    	Orders.MENU_JEID,
    	Orders.IS_DELIVERY,
    	Orders.BASKET_JEID,
    	Orders.ORDER_NUMBER,
    	Orders.ESTIMATED_DELIVERY_TIME,
    	Orders.TOTAL,
    	Orders.CREATED,
    	Orders.QUANTITY,
    	Orders.RESTAURANT_PHONE,
    	Orders.DELIVERY_CHARGE,
    	Orders.SUB_TOTAL,
    	Orders.DISCOUNT,
    	Orders.MULTIBUY_DISCOUNT,
    	Orders.ORDER_ID,
    	Orders.ORDER_STATUS,
    	Orders.DELIVERY_ADDRESS,
    	Orders.DELIVERY_CITY,
    	Orders.DELIVERY_POSTCODE,
    	Orders.INITIAL_ESTIMATED_DELIVERY_TIME,
    	Orders.PLACED_DATE,
    	Orders.PAYMENT_IS_CARD,
    	Orders.PAYMENT_CARD_TYPE,
    	Orders.PAYMENT_CARD_DIGITS,
    	Orders.PAYMENT_CARD_CHARGE,
    	Orders.ESTIMATED_DELIVERY_DATE,
    	Orders.IS_RESTAURANT_OPEN_NOW,
    	Orders.IS_RESTAURANT_OFFLINE,
    	Orders.IS_RESTAURANT_NEW,
    	Orders.RESTAURANT_SEO_NAME,
    	Orders.RESTAURANT_DESCRIPTION,
    	Orders.IS_REORDABLE,
    	Orders.TOTAL_COMPLEMENTARY
    };
    
    public interface Indices {
    	int _ID = 0;
    	int RESTAURANT_JEID = 1;
    	int RESTAURANT_NAME = 2;
    	int RESTAURANT_ADDRESS = 3;
    	int RESTAURANT_CITY = 4;
    	int RESTAURANT_POSTCODE = 5;
    	int RESTAURANT_LOGO_STANDARD_RES_URL = 6;
    	int MENU_JEID = 7;
    	int IS_DELIVERY = 8;
    	int BASKET_JEID = 9;
    	int ORDER_NUMBER = 10;
    	int ESTIMATED_DELIVERY_TIME = 11;
    	int TOTAL = 12;
    	int CREATED = 13;
    	int QUANTITY = 14;
    	int RESTAURANT_PHONE = 15;
    	int DELIVERY_CHARGE = 16;
    	int SUB_TOTAL = 17;
    	int DISCOUNT = 18;
    	int MULTIBUY_DISCOUNT = 19;
    	int ORDER_ID = 20;
    	int ORDER_STATUS = 21;
    	int DELIVERY_ADDRESS = 22;
    	int DELIVERY_CITY = 23;
    	int DELIVERY_POSTCODE = 24;
    	int INITIAL_ESTIMATED_DELIVERY_TIME = 25;
    	int PLACED_DATE = 26;
    	int PAYMENT_IS_CARD = 27;
    	int PAYMENT_CARD_TYPE = 28;
    	int PAYMENT_CARD_DIGITS = 29;
    	int PAYMENT_CARD_CHARGE = 30;
    	int ESTIMATED_DELIVERY_DATE = 31;
    	int IS_RESTAURANT_OPEN_NOW = 32;
    	int IS_RESTAURANT_OFFLINE = 33;
    	int IS_RESTAURANT_NEW = 34;
    	int RESTAURANT_SEO_NAME = 35;
    	int RESTAURANT_DESCRIPTION = 36;
    	int IS_REORDABLE = 37;
    	int TOTAL_COMPLEMENTARY = 38;
    }
    
    private long mRestaurantJeid;
    private boolean mRestaurantJeidDirty;
    private String mRestaurantName;
    private boolean mRestaurantNameDirty;
    private String mRestaurantAddress;
    private boolean mRestaurantAddressDirty;
    private String mRestaurantCity;
    private boolean mRestaurantCityDirty;
    private String mRestaurantPostcode;
    private boolean mRestaurantPostcodeDirty;
    private String mRestaurantLogoStandardResUrl;
    private boolean mRestaurantLogoStandardResUrlDirty;
    private long mMenuJeid;
    private boolean mMenuJeidDirty;
    private boolean mIsDelivery;
    private boolean mIsDeliveryDirty;
    private String mBasketJeid;
    private boolean mBasketJeidDirty;
    private String mOrderNumber;
    private boolean mOrderNumberDirty;
    private String mEstimatedDeliveryTime;
    private boolean mEstimatedDeliveryTimeDirty;
    private double mTotal;
    private boolean mTotalDirty;
    private long mCreated;
    private boolean mCreatedDirty;
    private long mQuantity;
    private boolean mQuantityDirty;
    private String mRestaurantPhone;
    private boolean mRestaurantPhoneDirty;
    private double mDeliveryCharge;
    private boolean mDeliveryChargeDirty;
    private double mSubTotal;
    private boolean mSubTotalDirty;
    private double mDiscount;
    private boolean mDiscountDirty;
    private double mMultibuyDiscount;
    private boolean mMultibuyDiscountDirty;
    private String mOrderId;
    private boolean mOrderIdDirty;
    private String mOrderStatus;
    private boolean mOrderStatusDirty;
    private String mDeliveryAddress;
    private boolean mDeliveryAddressDirty;
    private String mDeliveryCity;
    private boolean mDeliveryCityDirty;
    private String mDeliveryPostcode;
    private boolean mDeliveryPostcodeDirty;
    private String mInitialEstimatedDeliveryTime;
    private boolean mInitialEstimatedDeliveryTimeDirty;
    private String mPlacedDate;
    private boolean mPlacedDateDirty;
    private boolean mPaymentIsCard;
    private boolean mPaymentIsCardDirty;
    private String mPaymentCardType;
    private boolean mPaymentCardTypeDirty;
    private String mPaymentCardDigits;
    private boolean mPaymentCardDigitsDirty;
    private double mPaymentCardCharge;
    private boolean mPaymentCardChargeDirty;
    private long mEstimatedDeliveryDate;
    private boolean mEstimatedDeliveryDateDirty;
    private boolean mIsRestaurantOpenNow;
    private boolean mIsRestaurantOpenNowDirty;
    private boolean mIsRestaurantOffline;
    private boolean mIsRestaurantOfflineDirty;
    private boolean mIsRestaurantNew;
    private boolean mIsRestaurantNewDirty;
    private String mRestaurantSeoName;
    private boolean mRestaurantSeoNameDirty;
    private String mRestaurantDescription;
    private boolean mRestaurantDescriptionDirty;
    private boolean mIsReordable;
    private boolean mIsReordableDirty;
    private double mTotalComplementary;
    private boolean mTotalComplementaryDirty;
    
    @Override
    protected String[] _getProjection() {
    	return PROJECTION;
    }
    
    public void setRestaurantJeid(long restaurantJeid) {
    	mRestaurantJeid = restaurantJeid;
    	mRestaurantJeidDirty = true;
    }
    
    public long getRestaurantJeid() {
    	return mRestaurantJeid;
    }
    
    public void setRestaurantName(String restaurantName) {
    	mRestaurantName = restaurantName;
    	mRestaurantNameDirty = true;
    }
    
    public String getRestaurantName() {
    	return mRestaurantName;
    }
    
    public void setRestaurantAddress(String restaurantAddress) {
    	mRestaurantAddress = restaurantAddress;
    	mRestaurantAddressDirty = true;
    }
    
    public String getRestaurantAddress() {
    	return mRestaurantAddress;
    }
    
    public void setRestaurantCity(String restaurantCity) {
    	mRestaurantCity = restaurantCity;
    	mRestaurantCityDirty = true;
    }
    
    public String getRestaurantCity() {
    	return mRestaurantCity;
    }
    
    public void setRestaurantPostcode(String restaurantPostcode) {
    	mRestaurantPostcode = restaurantPostcode;
    	mRestaurantPostcodeDirty = true;
    }
    
    public String getRestaurantPostcode() {
    	return mRestaurantPostcode;
    }
    
    public void setRestaurantLogoStandardResUrl(String restaurantLogoStandardResUrl) {
    	mRestaurantLogoStandardResUrl = restaurantLogoStandardResUrl;
    	mRestaurantLogoStandardResUrlDirty = true;
    }
    
    public String getRestaurantLogoStandardResUrl() {
    	return mRestaurantLogoStandardResUrl;
    }
    
    public void setMenuJeid(long menuJeid) {
    	mMenuJeid = menuJeid;
    	mMenuJeidDirty = true;
    }
    
    public long getMenuJeid() {
    	return mMenuJeid;
    }
    
    public void setIsDelivery(boolean isDelivery) {
    	mIsDelivery = isDelivery;
    	mIsDeliveryDirty = true;
    }
    
    public boolean getIsDelivery() {
    	return mIsDelivery;
    }
    
    public void setBasketJeid(String basketJeid) {
    	mBasketJeid = basketJeid;
    	mBasketJeidDirty = true;
    }
    
    public String getBasketJeid() {
    	return mBasketJeid;
    }
    
    public void setOrderNumber(String orderNumber) {
    	mOrderNumber = orderNumber;
    	mOrderNumberDirty = true;
    }
    
    public String getOrderNumber() {
    	return mOrderNumber;
    }
    
    public void setEstimatedDeliveryTime(String estimatedDeliveryTime) {
    	mEstimatedDeliveryTime = estimatedDeliveryTime;
    	mEstimatedDeliveryTimeDirty = true;
    }
    
    public String getEstimatedDeliveryTime() {
    	return mEstimatedDeliveryTime;
    }
    
    public void setTotal(double total) {
    	mTotal = total;
    	mTotalDirty = true;
    }
    
    public double getTotal() {
    	return mTotal;
    }
    
    public void setCreated(long created) {
    	mCreated = created;
    	mCreatedDirty = true;
    }
    
    public long getCreated() {
    	return mCreated;
    }
    
    public void setQuantity(long quantity) {
    	mQuantity = quantity;
    	mQuantityDirty = true;
    }
    
    public long getQuantity() {
    	return mQuantity;
    }
    
    public void setRestaurantPhone(String restaurantPhone) {
    	mRestaurantPhone = restaurantPhone;
    	mRestaurantPhoneDirty = true;
    }
    
    public String getRestaurantPhone() {
    	return mRestaurantPhone;
    }
    
    public void setDeliveryCharge(double deliveryCharge) {
    	mDeliveryCharge = deliveryCharge;
    	mDeliveryChargeDirty = true;
    }
    
    public double getDeliveryCharge() {
    	return mDeliveryCharge;
    }
    
    public void setSubTotal(double subTotal) {
    	mSubTotal = subTotal;
    	mSubTotalDirty = true;
    }
    
    public double getSubTotal() {
    	return mSubTotal;
    }
    
    public void setDiscount(double discount) {
    	mDiscount = discount;
    	mDiscountDirty = true;
    }
    
    public double getDiscount() {
    	return mDiscount;
    }
    
    public void setMultibuyDiscount(double multibuyDiscount) {
    	mMultibuyDiscount = multibuyDiscount;
    	mMultibuyDiscountDirty = true;
    }
    
    public double getMultibuyDiscount() {
    	return mMultibuyDiscount;
    }
    
    public void setOrderId(String orderId) {
    	mOrderId = orderId;
    	mOrderIdDirty = true;
    }
    
    public String getOrderId() {
    	return mOrderId;
    }
    
    public void setOrderStatus(String orderStatus) {
    	mOrderStatus = orderStatus;
    	mOrderStatusDirty = true;
    }
    
    public String getOrderStatus() {
    	return mOrderStatus;
    }
    
    public void setDeliveryAddress(String deliveryAddress) {
    	mDeliveryAddress = deliveryAddress;
    	mDeliveryAddressDirty = true;
    }
    
    public String getDeliveryAddress() {
    	return mDeliveryAddress;
    }
    
    public void setDeliveryCity(String deliveryCity) {
    	mDeliveryCity = deliveryCity;
    	mDeliveryCityDirty = true;
    }
    
    public String getDeliveryCity() {
    	return mDeliveryCity;
    }
    
    public void setDeliveryPostcode(String deliveryPostcode) {
    	mDeliveryPostcode = deliveryPostcode;
    	mDeliveryPostcodeDirty = true;
    }
    
    public String getDeliveryPostcode() {
    	return mDeliveryPostcode;
    }
    
    public void setInitialEstimatedDeliveryTime(String initialEstimatedDeliveryTime) {
    	mInitialEstimatedDeliveryTime = initialEstimatedDeliveryTime;
    	mInitialEstimatedDeliveryTimeDirty = true;
    }
    
    public String getInitialEstimatedDeliveryTime() {
    	return mInitialEstimatedDeliveryTime;
    }
    
    public void setPlacedDate(String placedDate) {
    	mPlacedDate = placedDate;
    	mPlacedDateDirty = true;
    }
    
    public String getPlacedDate() {
    	return mPlacedDate;
    }
    
    public void setPaymentIsCard(boolean paymentIsCard) {
    	mPaymentIsCard = paymentIsCard;
    	mPaymentIsCardDirty = true;
    }
    
    public boolean getPaymentIsCard() {
    	return mPaymentIsCard;
    }
    
    public void setPaymentCardType(String paymentCardType) {
    	mPaymentCardType = paymentCardType;
    	mPaymentCardTypeDirty = true;
    }
    
    public String getPaymentCardType() {
    	return mPaymentCardType;
    }
    
    public void setPaymentCardDigits(String paymentCardDigits) {
    	mPaymentCardDigits = paymentCardDigits;
    	mPaymentCardDigitsDirty = true;
    }
    
    public String getPaymentCardDigits() {
    	return mPaymentCardDigits;
    }
    
    public void setPaymentCardCharge(double paymentCardCharge) {
    	mPaymentCardCharge = paymentCardCharge;
    	mPaymentCardChargeDirty = true;
    }
    
    public double getPaymentCardCharge() {
    	return mPaymentCardCharge;
    }
    
    public void setEstimatedDeliveryDate(long estimatedDeliveryDate) {
    	mEstimatedDeliveryDate = estimatedDeliveryDate;
    	mEstimatedDeliveryDateDirty = true;
    }
    
    public long getEstimatedDeliveryDate() {
    	return mEstimatedDeliveryDate;
    }
    
    public void setIsRestaurantOpenNow(boolean isRestaurantOpenNow) {
    	mIsRestaurantOpenNow = isRestaurantOpenNow;
    	mIsRestaurantOpenNowDirty = true;
    }
    
    public boolean getIsRestaurantOpenNow() {
    	return mIsRestaurantOpenNow;
    }
    
    public void setIsRestaurantOffline(boolean isRestaurantOffline) {
    	mIsRestaurantOffline = isRestaurantOffline;
    	mIsRestaurantOfflineDirty = true;
    }
    
    public boolean getIsRestaurantOffline() {
    	return mIsRestaurantOffline;
    }
    
    public void setIsRestaurantNew(boolean isRestaurantNew) {
    	mIsRestaurantNew = isRestaurantNew;
    	mIsRestaurantNewDirty = true;
    }
    
    public boolean getIsRestaurantNew() {
    	return mIsRestaurantNew;
    }
    
    public void setRestaurantSeoName(String restaurantSeoName) {
    	mRestaurantSeoName = restaurantSeoName;
    	mRestaurantSeoNameDirty = true;
    }
    
    public String getRestaurantSeoName() {
    	return mRestaurantSeoName;
    }
    
    public void setRestaurantDescription(String restaurantDescription) {
    	mRestaurantDescription = restaurantDescription;
    	mRestaurantDescriptionDirty = true;
    }
    
    public String getRestaurantDescription() {
    	return mRestaurantDescription;
    }
    
    public void setIsReordable(boolean isReordable) {
    	mIsReordable = isReordable;
    	mIsReordableDirty = true;
    }
    
    public boolean getIsReordable() {
    	return mIsReordable;
    }
    
    public void setTotalComplementary(double totalComplementary) {
    	mTotalComplementary = totalComplementary;
    	mTotalComplementaryDirty = true;
    }
    
    public double getTotalComplementary() {
    	return mTotalComplementary;
    }
    
    
    public OrdersRecord() {
    	super(Orders.CONTENT_URI);
	}
	
	private OrdersRecord(Parcel in) {
    	super(Orders.CONTENT_URI);
    	
		setId(in.readLong());
		
		mRestaurantJeid = in.readLong();
		mRestaurantName = in.readString();
		mRestaurantAddress = in.readString();
		mRestaurantCity = in.readString();
		mRestaurantPostcode = in.readString();
		mRestaurantLogoStandardResUrl = in.readString();
		mMenuJeid = in.readLong();
		mIsDelivery = (in.readInt() > 0);
		mBasketJeid = in.readString();
		mOrderNumber = in.readString();
		mEstimatedDeliveryTime = in.readString();
		mTotal = in.readDouble();
		mCreated = in.readLong();
		mQuantity = in.readLong();
		mRestaurantPhone = in.readString();
		mDeliveryCharge = in.readDouble();
		mSubTotal = in.readDouble();
		mDiscount = in.readDouble();
		mMultibuyDiscount = in.readDouble();
		mOrderId = in.readString();
		mOrderStatus = in.readString();
		mDeliveryAddress = in.readString();
		mDeliveryCity = in.readString();
		mDeliveryPostcode = in.readString();
		mInitialEstimatedDeliveryTime = in.readString();
		mPlacedDate = in.readString();
		mPaymentIsCard = (in.readInt() > 0);
		mPaymentCardType = in.readString();
		mPaymentCardDigits = in.readString();
		mPaymentCardCharge = in.readDouble();
		mEstimatedDeliveryDate = in.readLong();
		mIsRestaurantOpenNow = (in.readInt() > 0);
		mIsRestaurantOffline = (in.readInt() > 0);
		mIsRestaurantNew = (in.readInt() > 0);
		mRestaurantSeoName = in.readString();
		mRestaurantDescription = in.readString();
		mIsReordable = (in.readInt() > 0);
		mTotalComplementary = in.readDouble();
		
		boolean[] dirtyFlags = new boolean[38];
		in.readBooleanArray(dirtyFlags);
		mRestaurantJeidDirty = dirtyFlags[0];
		mRestaurantNameDirty = dirtyFlags[1];
		mRestaurantAddressDirty = dirtyFlags[2];
		mRestaurantCityDirty = dirtyFlags[3];
		mRestaurantPostcodeDirty = dirtyFlags[4];
		mRestaurantLogoStandardResUrlDirty = dirtyFlags[5];
		mMenuJeidDirty = dirtyFlags[6];
		mIsDeliveryDirty = dirtyFlags[7];
		mBasketJeidDirty = dirtyFlags[8];
		mOrderNumberDirty = dirtyFlags[9];
		mEstimatedDeliveryTimeDirty = dirtyFlags[10];
		mTotalDirty = dirtyFlags[11];
		mCreatedDirty = dirtyFlags[12];
		mQuantityDirty = dirtyFlags[13];
		mRestaurantPhoneDirty = dirtyFlags[14];
		mDeliveryChargeDirty = dirtyFlags[15];
		mSubTotalDirty = dirtyFlags[16];
		mDiscountDirty = dirtyFlags[17];
		mMultibuyDiscountDirty = dirtyFlags[18];
		mOrderIdDirty = dirtyFlags[19];
		mOrderStatusDirty = dirtyFlags[20];
		mDeliveryAddressDirty = dirtyFlags[21];
		mDeliveryCityDirty = dirtyFlags[22];
		mDeliveryPostcodeDirty = dirtyFlags[23];
		mInitialEstimatedDeliveryTimeDirty = dirtyFlags[24];
		mPlacedDateDirty = dirtyFlags[25];
		mPaymentIsCardDirty = dirtyFlags[26];
		mPaymentCardTypeDirty = dirtyFlags[27];
		mPaymentCardDigitsDirty = dirtyFlags[28];
		mPaymentCardChargeDirty = dirtyFlags[29];
		mEstimatedDeliveryDateDirty = dirtyFlags[30];
		mIsRestaurantOpenNowDirty = dirtyFlags[31];
		mIsRestaurantOfflineDirty = dirtyFlags[32];
		mIsRestaurantNewDirty = dirtyFlags[33];
		mRestaurantSeoNameDirty = dirtyFlags[34];
		mRestaurantDescriptionDirty = dirtyFlags[35];
		mIsReordableDirty = dirtyFlags[36];
		mTotalComplementaryDirty = dirtyFlags[37];
	}
	
	@Override
	public int describeContents() {
	    return 0;
	}
	
	@Override
	public void writeToParcel(Parcel dest, int flags) {
		dest.writeLong(getId());
		dest.writeLong(mRestaurantJeid);
		dest.writeString(mRestaurantName);
		dest.writeString(mRestaurantAddress);
		dest.writeString(mRestaurantCity);
		dest.writeString(mRestaurantPostcode);
		dest.writeString(mRestaurantLogoStandardResUrl);
		dest.writeLong(mMenuJeid);
		dest.writeInt(mIsDelivery ? 1 : 0);
		dest.writeString(mBasketJeid);
		dest.writeString(mOrderNumber);
		dest.writeString(mEstimatedDeliveryTime);
		dest.writeDouble(mTotal);
		dest.writeLong(mCreated);
		dest.writeLong(mQuantity);
		dest.writeString(mRestaurantPhone);
		dest.writeDouble(mDeliveryCharge);
		dest.writeDouble(mSubTotal);
		dest.writeDouble(mDiscount);
		dest.writeDouble(mMultibuyDiscount);
		dest.writeString(mOrderId);
		dest.writeString(mOrderStatus);
		dest.writeString(mDeliveryAddress);
		dest.writeString(mDeliveryCity);
		dest.writeString(mDeliveryPostcode);
		dest.writeString(mInitialEstimatedDeliveryTime);
		dest.writeString(mPlacedDate);
		dest.writeInt(mPaymentIsCard ? 1 : 0);
		dest.writeString(mPaymentCardType);
		dest.writeString(mPaymentCardDigits);
		dest.writeDouble(mPaymentCardCharge);
		dest.writeLong(mEstimatedDeliveryDate);
		dest.writeInt(mIsRestaurantOpenNow ? 1 : 0);
		dest.writeInt(mIsRestaurantOffline ? 1 : 0);
		dest.writeInt(mIsRestaurantNew ? 1 : 0);
		dest.writeString(mRestaurantSeoName);
		dest.writeString(mRestaurantDescription);
		dest.writeInt(mIsReordable ? 1 : 0);
		dest.writeDouble(mTotalComplementary);
		dest.writeBooleanArray(new boolean[] {
			mRestaurantJeidDirty,
			mRestaurantNameDirty,
			mRestaurantAddressDirty,
			mRestaurantCityDirty,
			mRestaurantPostcodeDirty,
			mRestaurantLogoStandardResUrlDirty,
			mMenuJeidDirty,
			mIsDeliveryDirty,
			mBasketJeidDirty,
			mOrderNumberDirty,
			mEstimatedDeliveryTimeDirty,
			mTotalDirty,
			mCreatedDirty,
			mQuantityDirty,
			mRestaurantPhoneDirty,
			mDeliveryChargeDirty,
			mSubTotalDirty,
			mDiscountDirty,
			mMultibuyDiscountDirty,
			mOrderIdDirty,
			mOrderStatusDirty,
			mDeliveryAddressDirty,
			mDeliveryCityDirty,
			mDeliveryPostcodeDirty,
			mInitialEstimatedDeliveryTimeDirty,
			mPlacedDateDirty,
			mPaymentIsCardDirty,
			mPaymentCardTypeDirty,
			mPaymentCardDigitsDirty,
			mPaymentCardChargeDirty,
			mEstimatedDeliveryDateDirty,
			mIsRestaurantOpenNowDirty,
			mIsRestaurantOfflineDirty,
			mIsRestaurantNewDirty,
			mRestaurantSeoNameDirty,
			mRestaurantDescriptionDirty,
			mIsReordableDirty,
			mTotalComplementaryDirty
		});
	}
	
	@Override
	protected AbstractValuesBuilder createBuilder() {
		Builder builder = Orders.newBuilder();

		if(mRestaurantJeidDirty) {
			builder.setRestaurantJeid(mRestaurantJeid);
		}
		if(mRestaurantNameDirty) {
			builder.setRestaurantName(mRestaurantName);
		}
		if(mRestaurantAddressDirty) {
			builder.setRestaurantAddress(mRestaurantAddress);
		}
		if(mRestaurantCityDirty) {
			builder.setRestaurantCity(mRestaurantCity);
		}
		if(mRestaurantPostcodeDirty) {
			builder.setRestaurantPostcode(mRestaurantPostcode);
		}
		if(mRestaurantLogoStandardResUrlDirty) {
			builder.setRestaurantLogoStandardResUrl(mRestaurantLogoStandardResUrl);
		}
		if(mMenuJeidDirty) {
			builder.setMenuJeid(mMenuJeid);
		}
		if(mIsDeliveryDirty) {
			builder.setIsDelivery(mIsDelivery);
		}
		if(mBasketJeidDirty) {
			builder.setBasketJeid(mBasketJeid);
		}
		if(mOrderNumberDirty) {
			builder.setOrderNumber(mOrderNumber);
		}
		if(mEstimatedDeliveryTimeDirty) {
			builder.setEstimatedDeliveryTime(mEstimatedDeliveryTime);
		}
		if(mTotalDirty) {
			builder.setTotal(mTotal);
		}
		if(mCreatedDirty) {
			builder.setCreated(mCreated);
		}
		if(mQuantityDirty) {
			builder.setQuantity(mQuantity);
		}
		if(mRestaurantPhoneDirty) {
			builder.setRestaurantPhone(mRestaurantPhone);
		}
		if(mDeliveryChargeDirty) {
			builder.setDeliveryCharge(mDeliveryCharge);
		}
		if(mSubTotalDirty) {
			builder.setSubTotal(mSubTotal);
		}
		if(mDiscountDirty) {
			builder.setDiscount(mDiscount);
		}
		if(mMultibuyDiscountDirty) {
			builder.setMultibuyDiscount(mMultibuyDiscount);
		}
		if(mOrderIdDirty) {
			builder.setOrderId(mOrderId);
		}
		if(mOrderStatusDirty) {
			builder.setOrderStatus(mOrderStatus);
		}
		if(mDeliveryAddressDirty) {
			builder.setDeliveryAddress(mDeliveryAddress);
		}
		if(mDeliveryCityDirty) {
			builder.setDeliveryCity(mDeliveryCity);
		}
		if(mDeliveryPostcodeDirty) {
			builder.setDeliveryPostcode(mDeliveryPostcode);
		}
		if(mInitialEstimatedDeliveryTimeDirty) {
			builder.setInitialEstimatedDeliveryTime(mInitialEstimatedDeliveryTime);
		}
		if(mPlacedDateDirty) {
			builder.setPlacedDate(mPlacedDate);
		}
		if(mPaymentIsCardDirty) {
			builder.setPaymentIsCard(mPaymentIsCard);
		}
		if(mPaymentCardTypeDirty) {
			builder.setPaymentCardType(mPaymentCardType);
		}
		if(mPaymentCardDigitsDirty) {
			builder.setPaymentCardDigits(mPaymentCardDigits);
		}
		if(mPaymentCardChargeDirty) {
			builder.setPaymentCardCharge(mPaymentCardCharge);
		}
		if(mEstimatedDeliveryDateDirty) {
			builder.setEstimatedDeliveryDate(mEstimatedDeliveryDate);
		}
		if(mIsRestaurantOpenNowDirty) {
			builder.setIsRestaurantOpenNow(mIsRestaurantOpenNow);
		}
		if(mIsRestaurantOfflineDirty) {
			builder.setIsRestaurantOffline(mIsRestaurantOffline);
		}
		if(mIsRestaurantNewDirty) {
			builder.setIsRestaurantNew(mIsRestaurantNew);
		}
		if(mRestaurantSeoNameDirty) {
			builder.setRestaurantSeoName(mRestaurantSeoName);
		}
		if(mRestaurantDescriptionDirty) {
			builder.setRestaurantDescription(mRestaurantDescription);
		}
		if(mIsReordableDirty) {
			builder.setIsReordable(mIsReordable);
		}
		if(mTotalComplementaryDirty) {
			builder.setTotalComplementary(mTotalComplementary);
		}
		
		return builder;
	}
	
    @Override
	public void makeDirty(boolean dirty){
		mRestaurantJeidDirty = dirty;
		mRestaurantNameDirty = dirty;
		mRestaurantAddressDirty = dirty;
		mRestaurantCityDirty = dirty;
		mRestaurantPostcodeDirty = dirty;
		mRestaurantLogoStandardResUrlDirty = dirty;
		mMenuJeidDirty = dirty;
		mIsDeliveryDirty = dirty;
		mBasketJeidDirty = dirty;
		mOrderNumberDirty = dirty;
		mEstimatedDeliveryTimeDirty = dirty;
		mTotalDirty = dirty;
		mCreatedDirty = dirty;
		mQuantityDirty = dirty;
		mRestaurantPhoneDirty = dirty;
		mDeliveryChargeDirty = dirty;
		mSubTotalDirty = dirty;
		mDiscountDirty = dirty;
		mMultibuyDiscountDirty = dirty;
		mOrderIdDirty = dirty;
		mOrderStatusDirty = dirty;
		mDeliveryAddressDirty = dirty;
		mDeliveryCityDirty = dirty;
		mDeliveryPostcodeDirty = dirty;
		mInitialEstimatedDeliveryTimeDirty = dirty;
		mPlacedDateDirty = dirty;
		mPaymentIsCardDirty = dirty;
		mPaymentCardTypeDirty = dirty;
		mPaymentCardDigitsDirty = dirty;
		mPaymentCardChargeDirty = dirty;
		mEstimatedDeliveryDateDirty = dirty;
		mIsRestaurantOpenNowDirty = dirty;
		mIsRestaurantOfflineDirty = dirty;
		mIsRestaurantNewDirty = dirty;
		mRestaurantSeoNameDirty = dirty;
		mRestaurantDescriptionDirty = dirty;
		mIsReordableDirty = dirty;
		mTotalComplementaryDirty = dirty;
	}

	@Override
	protected void setPropertiesFromCursor(Cursor c) {
		setId(c.getLong(Indices._ID));
		setRestaurantJeid(c.getLong(Indices.RESTAURANT_JEID));
		setRestaurantName(c.getString(Indices.RESTAURANT_NAME));
		setRestaurantAddress(c.getString(Indices.RESTAURANT_ADDRESS));
		setRestaurantCity(c.getString(Indices.RESTAURANT_CITY));
		setRestaurantPostcode(c.getString(Indices.RESTAURANT_POSTCODE));
		setRestaurantLogoStandardResUrl(c.getString(Indices.RESTAURANT_LOGO_STANDARD_RES_URL));
		setMenuJeid(c.getLong(Indices.MENU_JEID));
		setIsDelivery(c.getInt(Indices.IS_DELIVERY) > 0);
		setBasketJeid(c.getString(Indices.BASKET_JEID));
		setOrderNumber(c.getString(Indices.ORDER_NUMBER));
		setEstimatedDeliveryTime(c.getString(Indices.ESTIMATED_DELIVERY_TIME));
		setTotal(c.getDouble(Indices.TOTAL));
		setCreated(c.getLong(Indices.CREATED));
		setQuantity(c.getLong(Indices.QUANTITY));
		setRestaurantPhone(c.getString(Indices.RESTAURANT_PHONE));
		setDeliveryCharge(c.getDouble(Indices.DELIVERY_CHARGE));
		setSubTotal(c.getDouble(Indices.SUB_TOTAL));
		setDiscount(c.getDouble(Indices.DISCOUNT));
		setMultibuyDiscount(c.getDouble(Indices.MULTIBUY_DISCOUNT));
		setOrderId(c.getString(Indices.ORDER_ID));
		setOrderStatus(c.getString(Indices.ORDER_STATUS));
		setDeliveryAddress(c.getString(Indices.DELIVERY_ADDRESS));
		setDeliveryCity(c.getString(Indices.DELIVERY_CITY));
		setDeliveryPostcode(c.getString(Indices.DELIVERY_POSTCODE));
		setInitialEstimatedDeliveryTime(c.getString(Indices.INITIAL_ESTIMATED_DELIVERY_TIME));
		setPlacedDate(c.getString(Indices.PLACED_DATE));
		setPaymentIsCard(c.getInt(Indices.PAYMENT_IS_CARD) > 0);
		setPaymentCardType(c.getString(Indices.PAYMENT_CARD_TYPE));
		setPaymentCardDigits(c.getString(Indices.PAYMENT_CARD_DIGITS));
		setPaymentCardCharge(c.getDouble(Indices.PAYMENT_CARD_CHARGE));
		setEstimatedDeliveryDate(c.getLong(Indices.ESTIMATED_DELIVERY_DATE));
		setIsRestaurantOpenNow(c.getInt(Indices.IS_RESTAURANT_OPEN_NOW) > 0);
		setIsRestaurantOffline(c.getInt(Indices.IS_RESTAURANT_OFFLINE) > 0);
		setIsRestaurantNew(c.getInt(Indices.IS_RESTAURANT_NEW) > 0);
		setRestaurantSeoName(c.getString(Indices.RESTAURANT_SEO_NAME));
		setRestaurantDescription(c.getString(Indices.RESTAURANT_DESCRIPTION));
		setIsReordable(c.getInt(Indices.IS_REORDABLE) > 0);
		setTotalComplementary(c.getDouble(Indices.TOTAL_COMPLEMENTARY));
	}
	
	public static OrdersRecord fromCursor(Cursor c) {
	    OrdersRecord item = new OrdersRecord();
	    
		item.setPropertiesFromCursor(c);
		
		item.makeDirty(false);
		
	    return item;
	}
	
	public static OrdersRecord fromBundle(Bundle bundle, String key) {
		bundle.setClassLoader(OrdersRecord.class.getClassLoader());
		return bundle.getParcelable(key);
	}
	
	public static OrdersRecord get(long id) {
	    Cursor c = null;
	    
	    ContentResolver resolver = Mechanoid.getContentResolver();
	    
	    try {
	        c = resolver.query(Orders.CONTENT_URI.buildUpon()
			.appendPath(String.valueOf(id)).build(), PROJECTION, null, null, null);
	        
	        if(!c.moveToFirst()) {
	            return null;
	        }
	        
	        return fromCursor(c);
	    } finally {
	        Closeables.closeSilently(c);
	    }
	}
}
