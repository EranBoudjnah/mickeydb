/*
 * Generated by Robotoworks Mechanoid
 */
package com.justeat;

import android.content.Context;
import android.content.UriMatcher;
import android.net.Uri;
import java.util.Set;
import com.robotoworks.mechanoid.db.MechanoidContentProvider;
import com.robotoworks.mechanoid.db.MechanoidSQLiteOpenHelper;
import com.robotoworks.mechanoid.db.DefaultContentProviderActions;
import com.robotoworks.mechanoid.db.ContentProviderActions;
import com.justeat.AbstractTakeawaysDBOpenHelper.Sources;
import com.justeat.AddressSearchResultRecord;
import com.justeat.BasketItemAccessoriesRecord;
import com.justeat.BasketItemMealpartsRecord;
import com.justeat.BasketItemsRecord;
import com.justeat.BasketTaxesRecord;
import com.justeat.BasketsRecord;
import com.justeat.CuisineTypesRecord;
import com.justeat.MenusRecord;
import com.justeat.OrderHistoryItemAccessoriesRecord;
import com.justeat.OrderHistoryItemMealpartsRecord;
import com.justeat.OrderHistoryItemsRecord;
import com.justeat.OrdersRecord;
import com.justeat.PaymentLinesRecord;
import com.justeat.ProductAccessoriesRecord;
import com.justeat.ProductCategoriesRecord;
import com.justeat.ProductComboOptionChoicesRecord;
import com.justeat.ProductComboOptionsRecord;
import com.justeat.ProductsRecord;
import com.justeat.RecentlyViewedRestaurantsRecord;
import com.justeat.RestaurantDealsRecord;
import com.justeat.RestaurantOpeningTimesRecord;
import com.justeat.RestaurantsRecord;
import com.justeat.ReviewsRecord;
import com.justeat.SysEventsRecord;
import com.justeat.UserDetailsRecord;

public abstract class AbstractTakeawaysDBContentProvider extends MechanoidContentProvider {

	public static final int ADDRESS_SEARCH_RESULT = 0;
	public static final int ADDRESS_SEARCH_RESULT_ID = 1;
	public static final int BASKET_ITEM_ACCESSORIES = 2;
	public static final int BASKET_ITEM_ACCESSORIES_ID = 3;
	public static final int BASKET_ITEM_MEALPARTS = 4;
	public static final int BASKET_ITEM_MEALPARTS_ID = 5;
	public static final int BASKET_ITEMS = 6;
	public static final int BASKET_ITEMS_ID = 7;
	public static final int BASKET_TAXES = 8;
	public static final int BASKET_TAXES_ID = 9;
	public static final int BASKETS = 10;
	public static final int BASKETS_ID = 11;
	public static final int CUISINE_TYPES = 12;
	public static final int CUISINE_TYPES_ID = 13;
	public static final int MENUS = 14;
	public static final int MENUS_ID = 15;
	public static final int ORDER_HISTORY_ITEM_ACCESSORIES = 16;
	public static final int ORDER_HISTORY_ITEM_ACCESSORIES_ID = 17;
	public static final int ORDER_HISTORY_ITEM_MEALPARTS = 18;
	public static final int ORDER_HISTORY_ITEM_MEALPARTS_ID = 19;
	public static final int ORDER_HISTORY_ITEMS = 20;
	public static final int ORDER_HISTORY_ITEMS_ID = 21;
	public static final int ORDERS = 22;
	public static final int ORDERS_ID = 23;
	public static final int PAYMENT_LINES = 24;
	public static final int PAYMENT_LINES_ID = 25;
	public static final int PRODUCT_ACCESSORIES = 26;
	public static final int PRODUCT_ACCESSORIES_ID = 27;
	public static final int PRODUCT_CATEGORIES = 28;
	public static final int PRODUCT_CATEGORIES_ID = 29;
	public static final int PRODUCT_COMBO_OPTION_CHOICES = 30;
	public static final int PRODUCT_COMBO_OPTION_CHOICES_ID = 31;
	public static final int PRODUCT_COMBO_OPTIONS = 32;
	public static final int PRODUCT_COMBO_OPTIONS_ID = 33;
	public static final int PRODUCTS = 34;
	public static final int PRODUCTS_ID = 35;
	public static final int RECENTLY_VIEWED_RESTAURANTS = 36;
	public static final int RECENTLY_VIEWED_RESTAURANTS_ID = 37;
	public static final int RESTAURANT_DEALS = 38;
	public static final int RESTAURANT_DEALS_ID = 39;
	public static final int RESTAURANT_OPENING_TIMES = 40;
	public static final int RESTAURANT_OPENING_TIMES_ID = 41;
	public static final int RESTAURANTS = 42;
	public static final int RESTAURANTS_ID = 43;
	public static final int REVIEWS = 44;
	public static final int REVIEWS_ID = 45;
	public static final int SYS_EVENTS = 46;
	public static final int SYS_EVENTS_ID = 47;
	public static final int USER_DETAILS = 48;
	public static final int USER_DETAILS_ID = 49;

	
	public static final int ORDER_HISTORY_SUMMARY = 50;
	public static final int ORDER_HISTORY_SUMMARY_ID = 51;
	public static final int ORDER_SUMMARY = 52;
	public static final int ORDER_SUMMARY_ID = 53;
	public static final int PRODUCT_ACCESSORY_TYPES = 54;
	public static final int PRODUCT_CATEGORIES_WITH_COUNT = 55;
	public static final int PRODUCT_CATEGORIES_WITH_COUNT_ID = 56;
	public static final int PRODUCTS_IN_BASKET = 57;
	public static final int PRODUCTS_IN_BASKET_ID = 58;
	public static final int PRODUCTS_IN_CATEGORIES = 59;
	public static final int PRODUCTS_IN_CATEGORIES_ID = 60;
	public static final int RESTAURANTS_AND_BASKET = 61;
	public static final int RESTAURANTS_AND_BASKET_ID = 62;
	public static final int ACCESSORIES_SELECTED_ACCESSORIES_SELECTED = 63;
	public static final int NUM_URI_MATCHERS = 64;

	@Override
    protected UriMatcher createUriMatcher() {
        final UriMatcher matcher = new UriMatcher(UriMatcher.NO_MATCH);
        final String authority = TakeawaysDBContract.CONTENT_AUTHORITY;

		matcher.addURI(authority, "address_search_result", ADDRESS_SEARCH_RESULT);
		matcher.addURI(authority, "address_search_result/#", ADDRESS_SEARCH_RESULT_ID);
		matcher.addURI(authority, "basket_item_accessories", BASKET_ITEM_ACCESSORIES);
		matcher.addURI(authority, "basket_item_accessories/#", BASKET_ITEM_ACCESSORIES_ID);
		matcher.addURI(authority, "basket_item_mealparts", BASKET_ITEM_MEALPARTS);
		matcher.addURI(authority, "basket_item_mealparts/#", BASKET_ITEM_MEALPARTS_ID);
		matcher.addURI(authority, "basket_items", BASKET_ITEMS);
		matcher.addURI(authority, "basket_items/#", BASKET_ITEMS_ID);
		matcher.addURI(authority, "basket_taxes", BASKET_TAXES);
		matcher.addURI(authority, "basket_taxes/#", BASKET_TAXES_ID);
		matcher.addURI(authority, "baskets", BASKETS);
		matcher.addURI(authority, "baskets/#", BASKETS_ID);
		matcher.addURI(authority, "cuisine_types", CUISINE_TYPES);
		matcher.addURI(authority, "cuisine_types/#", CUISINE_TYPES_ID);
		matcher.addURI(authority, "menus", MENUS);
		matcher.addURI(authority, "menus/#", MENUS_ID);
		matcher.addURI(authority, "order_history_item_accessories", ORDER_HISTORY_ITEM_ACCESSORIES);
		matcher.addURI(authority, "order_history_item_accessories/#", ORDER_HISTORY_ITEM_ACCESSORIES_ID);
		matcher.addURI(authority, "order_history_item_mealparts", ORDER_HISTORY_ITEM_MEALPARTS);
		matcher.addURI(authority, "order_history_item_mealparts/#", ORDER_HISTORY_ITEM_MEALPARTS_ID);
		matcher.addURI(authority, "order_history_items", ORDER_HISTORY_ITEMS);
		matcher.addURI(authority, "order_history_items/#", ORDER_HISTORY_ITEMS_ID);
		matcher.addURI(authority, "orders", ORDERS);
		matcher.addURI(authority, "orders/#", ORDERS_ID);
		matcher.addURI(authority, "payment_lines", PAYMENT_LINES);
		matcher.addURI(authority, "payment_lines/#", PAYMENT_LINES_ID);
		matcher.addURI(authority, "product_accessories", PRODUCT_ACCESSORIES);
		matcher.addURI(authority, "product_accessories/#", PRODUCT_ACCESSORIES_ID);
		matcher.addURI(authority, "product_categories", PRODUCT_CATEGORIES);
		matcher.addURI(authority, "product_categories/#", PRODUCT_CATEGORIES_ID);
		matcher.addURI(authority, "product_combo_option_choices", PRODUCT_COMBO_OPTION_CHOICES);
		matcher.addURI(authority, "product_combo_option_choices/#", PRODUCT_COMBO_OPTION_CHOICES_ID);
		matcher.addURI(authority, "product_combo_options", PRODUCT_COMBO_OPTIONS);
		matcher.addURI(authority, "product_combo_options/#", PRODUCT_COMBO_OPTIONS_ID);
		matcher.addURI(authority, "products", PRODUCTS);
		matcher.addURI(authority, "products/#", PRODUCTS_ID);
		matcher.addURI(authority, "recently_viewed_restaurants", RECENTLY_VIEWED_RESTAURANTS);
		matcher.addURI(authority, "recently_viewed_restaurants/#", RECENTLY_VIEWED_RESTAURANTS_ID);
		matcher.addURI(authority, "restaurant_deals", RESTAURANT_DEALS);
		matcher.addURI(authority, "restaurant_deals/#", RESTAURANT_DEALS_ID);
		matcher.addURI(authority, "restaurant_opening_times", RESTAURANT_OPENING_TIMES);
		matcher.addURI(authority, "restaurant_opening_times/#", RESTAURANT_OPENING_TIMES_ID);
		matcher.addURI(authority, "restaurants", RESTAURANTS);
		matcher.addURI(authority, "restaurants/#", RESTAURANTS_ID);
		matcher.addURI(authority, "reviews", REVIEWS);
		matcher.addURI(authority, "reviews/#", REVIEWS_ID);
		matcher.addURI(authority, "sys_events", SYS_EVENTS);
		matcher.addURI(authority, "sys_events/#", SYS_EVENTS_ID);
		matcher.addURI(authority, "user_details", USER_DETAILS);
		matcher.addURI(authority, "user_details/#", USER_DETAILS_ID);
		matcher.addURI(authority, "order_history_summary", ORDER_HISTORY_SUMMARY);
		matcher.addURI(authority, "order_history_summary/#", ORDER_HISTORY_SUMMARY_ID);
		matcher.addURI(authority, "order_summary", ORDER_SUMMARY);
		matcher.addURI(authority, "order_summary/#", ORDER_SUMMARY_ID);
		matcher.addURI(authority, "product_accessory_types", PRODUCT_ACCESSORY_TYPES);
		matcher.addURI(authority, "product_categories_with_count", PRODUCT_CATEGORIES_WITH_COUNT);
		matcher.addURI(authority, "product_categories_with_count/#", PRODUCT_CATEGORIES_WITH_COUNT_ID);
		matcher.addURI(authority, "products_in_basket", PRODUCTS_IN_BASKET);
		matcher.addURI(authority, "products_in_basket/#", PRODUCTS_IN_BASKET_ID);
		matcher.addURI(authority, "products_in_categories", PRODUCTS_IN_CATEGORIES);
		matcher.addURI(authority, "products_in_categories/#", PRODUCTS_IN_CATEGORIES_ID);
		matcher.addURI(authority, "restaurants_and_basket", RESTAURANTS_AND_BASKET);
		matcher.addURI(authority, "restaurants_and_basket/#", RESTAURANTS_AND_BASKET_ID);

		// User Actions
		matcher.addURI(authority, "accessories_selected", ACCESSORIES_SELECTED_ACCESSORIES_SELECTED); 
        return matcher;
    }
    
    @Override
    protected String[] createContentTypes() {
		String[] contentTypes = new String[NUM_URI_MATCHERS];

		contentTypes[ADDRESS_SEARCH_RESULT] = TakeawaysDBContract.AddressSearchResult.CONTENT_TYPE;
		contentTypes[ADDRESS_SEARCH_RESULT_ID] = TakeawaysDBContract.AddressSearchResult.ITEM_CONTENT_TYPE;
		contentTypes[BASKET_ITEM_ACCESSORIES] = TakeawaysDBContract.BasketItemAccessories.CONTENT_TYPE;
		contentTypes[BASKET_ITEM_ACCESSORIES_ID] = TakeawaysDBContract.BasketItemAccessories.ITEM_CONTENT_TYPE;
		contentTypes[BASKET_ITEM_MEALPARTS] = TakeawaysDBContract.BasketItemMealparts.CONTENT_TYPE;
		contentTypes[BASKET_ITEM_MEALPARTS_ID] = TakeawaysDBContract.BasketItemMealparts.ITEM_CONTENT_TYPE;
		contentTypes[BASKET_ITEMS] = TakeawaysDBContract.BasketItems.CONTENT_TYPE;
		contentTypes[BASKET_ITEMS_ID] = TakeawaysDBContract.BasketItems.ITEM_CONTENT_TYPE;
		contentTypes[BASKET_TAXES] = TakeawaysDBContract.BasketTaxes.CONTENT_TYPE;
		contentTypes[BASKET_TAXES_ID] = TakeawaysDBContract.BasketTaxes.ITEM_CONTENT_TYPE;
		contentTypes[BASKETS] = TakeawaysDBContract.Baskets.CONTENT_TYPE;
		contentTypes[BASKETS_ID] = TakeawaysDBContract.Baskets.ITEM_CONTENT_TYPE;
		contentTypes[CUISINE_TYPES] = TakeawaysDBContract.CuisineTypes.CONTENT_TYPE;
		contentTypes[CUISINE_TYPES_ID] = TakeawaysDBContract.CuisineTypes.ITEM_CONTENT_TYPE;
		contentTypes[MENUS] = TakeawaysDBContract.Menus.CONTENT_TYPE;
		contentTypes[MENUS_ID] = TakeawaysDBContract.Menus.ITEM_CONTENT_TYPE;
		contentTypes[ORDER_HISTORY_ITEM_ACCESSORIES] = TakeawaysDBContract.OrderHistoryItemAccessories.CONTENT_TYPE;
		contentTypes[ORDER_HISTORY_ITEM_ACCESSORIES_ID] = TakeawaysDBContract.OrderHistoryItemAccessories.ITEM_CONTENT_TYPE;
		contentTypes[ORDER_HISTORY_ITEM_MEALPARTS] = TakeawaysDBContract.OrderHistoryItemMealparts.CONTENT_TYPE;
		contentTypes[ORDER_HISTORY_ITEM_MEALPARTS_ID] = TakeawaysDBContract.OrderHistoryItemMealparts.ITEM_CONTENT_TYPE;
		contentTypes[ORDER_HISTORY_ITEMS] = TakeawaysDBContract.OrderHistoryItems.CONTENT_TYPE;
		contentTypes[ORDER_HISTORY_ITEMS_ID] = TakeawaysDBContract.OrderHistoryItems.ITEM_CONTENT_TYPE;
		contentTypes[ORDERS] = TakeawaysDBContract.Orders.CONTENT_TYPE;
		contentTypes[ORDERS_ID] = TakeawaysDBContract.Orders.ITEM_CONTENT_TYPE;
		contentTypes[PAYMENT_LINES] = TakeawaysDBContract.PaymentLines.CONTENT_TYPE;
		contentTypes[PAYMENT_LINES_ID] = TakeawaysDBContract.PaymentLines.ITEM_CONTENT_TYPE;
		contentTypes[PRODUCT_ACCESSORIES] = TakeawaysDBContract.ProductAccessories.CONTENT_TYPE;
		contentTypes[PRODUCT_ACCESSORIES_ID] = TakeawaysDBContract.ProductAccessories.ITEM_CONTENT_TYPE;
		contentTypes[PRODUCT_CATEGORIES] = TakeawaysDBContract.ProductCategories.CONTENT_TYPE;
		contentTypes[PRODUCT_CATEGORIES_ID] = TakeawaysDBContract.ProductCategories.ITEM_CONTENT_TYPE;
		contentTypes[PRODUCT_COMBO_OPTION_CHOICES] = TakeawaysDBContract.ProductComboOptionChoices.CONTENT_TYPE;
		contentTypes[PRODUCT_COMBO_OPTION_CHOICES_ID] = TakeawaysDBContract.ProductComboOptionChoices.ITEM_CONTENT_TYPE;
		contentTypes[PRODUCT_COMBO_OPTIONS] = TakeawaysDBContract.ProductComboOptions.CONTENT_TYPE;
		contentTypes[PRODUCT_COMBO_OPTIONS_ID] = TakeawaysDBContract.ProductComboOptions.ITEM_CONTENT_TYPE;
		contentTypes[PRODUCTS] = TakeawaysDBContract.Products.CONTENT_TYPE;
		contentTypes[PRODUCTS_ID] = TakeawaysDBContract.Products.ITEM_CONTENT_TYPE;
		contentTypes[RECENTLY_VIEWED_RESTAURANTS] = TakeawaysDBContract.RecentlyViewedRestaurants.CONTENT_TYPE;
		contentTypes[RECENTLY_VIEWED_RESTAURANTS_ID] = TakeawaysDBContract.RecentlyViewedRestaurants.ITEM_CONTENT_TYPE;
		contentTypes[RESTAURANT_DEALS] = TakeawaysDBContract.RestaurantDeals.CONTENT_TYPE;
		contentTypes[RESTAURANT_DEALS_ID] = TakeawaysDBContract.RestaurantDeals.ITEM_CONTENT_TYPE;
		contentTypes[RESTAURANT_OPENING_TIMES] = TakeawaysDBContract.RestaurantOpeningTimes.CONTENT_TYPE;
		contentTypes[RESTAURANT_OPENING_TIMES_ID] = TakeawaysDBContract.RestaurantOpeningTimes.ITEM_CONTENT_TYPE;
		contentTypes[RESTAURANTS] = TakeawaysDBContract.Restaurants.CONTENT_TYPE;
		contentTypes[RESTAURANTS_ID] = TakeawaysDBContract.Restaurants.ITEM_CONTENT_TYPE;
		contentTypes[REVIEWS] = TakeawaysDBContract.Reviews.CONTENT_TYPE;
		contentTypes[REVIEWS_ID] = TakeawaysDBContract.Reviews.ITEM_CONTENT_TYPE;
		contentTypes[SYS_EVENTS] = TakeawaysDBContract.SysEvents.CONTENT_TYPE;
		contentTypes[SYS_EVENTS_ID] = TakeawaysDBContract.SysEvents.ITEM_CONTENT_TYPE;
		contentTypes[USER_DETAILS] = TakeawaysDBContract.UserDetails.CONTENT_TYPE;
		contentTypes[USER_DETAILS_ID] = TakeawaysDBContract.UserDetails.ITEM_CONTENT_TYPE;
		contentTypes[ORDER_HISTORY_SUMMARY] = TakeawaysDBContract.OrderHistorySummary.CONTENT_TYPE;
		contentTypes[ORDER_HISTORY_SUMMARY_ID] = TakeawaysDBContract.OrderHistorySummary.ITEM_CONTENT_TYPE;
		contentTypes[ORDER_SUMMARY] = TakeawaysDBContract.OrderSummary.CONTENT_TYPE;
		contentTypes[ORDER_SUMMARY_ID] = TakeawaysDBContract.OrderSummary.ITEM_CONTENT_TYPE;
		contentTypes[PRODUCT_ACCESSORY_TYPES] = TakeawaysDBContract.ProductAccessoryTypes.CONTENT_TYPE;
		contentTypes[PRODUCT_CATEGORIES_WITH_COUNT] = TakeawaysDBContract.ProductCategoriesWithCount.CONTENT_TYPE;
		contentTypes[PRODUCT_CATEGORIES_WITH_COUNT_ID] = TakeawaysDBContract.ProductCategoriesWithCount.ITEM_CONTENT_TYPE;
		contentTypes[PRODUCTS_IN_BASKET] = TakeawaysDBContract.ProductsInBasket.CONTENT_TYPE;
		contentTypes[PRODUCTS_IN_BASKET_ID] = TakeawaysDBContract.ProductsInBasket.ITEM_CONTENT_TYPE;
		contentTypes[PRODUCTS_IN_CATEGORIES] = TakeawaysDBContract.ProductsInCategories.CONTENT_TYPE;
		contentTypes[PRODUCTS_IN_CATEGORIES_ID] = TakeawaysDBContract.ProductsInCategories.ITEM_CONTENT_TYPE;
		contentTypes[RESTAURANTS_AND_BASKET] = TakeawaysDBContract.RestaurantsAndBasket.CONTENT_TYPE;
		contentTypes[RESTAURANTS_AND_BASKET_ID] = TakeawaysDBContract.RestaurantsAndBasket.ITEM_CONTENT_TYPE;
		contentTypes[ACCESSORIES_SELECTED_ACCESSORIES_SELECTED] = TakeawaysDBContract.AccessoriesSelected.CONTENT_TYPE;
		
		return contentTypes;
    }

	@Override
	protected MechanoidSQLiteOpenHelper createOpenHelper(Context context) {
        return new TakeawaysDBOpenHelper(context);
	}
	
	@Override
	protected Set<Uri> getRelatedUris(Uri uri) {
		return TakeawaysDBContract.REFERENCING_VIEWS.get(uri);
	}
    
    @Override
    protected ContentProviderActions createActions(int id) {
    	switch(id) {
			case ADDRESS_SEARCH_RESULT: 
				return createAddressSearchResultActions();
			case ADDRESS_SEARCH_RESULT_ID:
				return createAddressSearchResultByIdActions();
			case BASKET_ITEM_ACCESSORIES: 
				return createBasketItemAccessoriesActions();
			case BASKET_ITEM_ACCESSORIES_ID:
				return createBasketItemAccessoriesByIdActions();
			case BASKET_ITEM_MEALPARTS: 
				return createBasketItemMealpartsActions();
			case BASKET_ITEM_MEALPARTS_ID:
				return createBasketItemMealpartsByIdActions();
			case BASKET_ITEMS: 
				return createBasketItemsActions();
			case BASKET_ITEMS_ID:
				return createBasketItemsByIdActions();
			case BASKET_TAXES: 
				return createBasketTaxesActions();
			case BASKET_TAXES_ID:
				return createBasketTaxesByIdActions();
			case BASKETS: 
				return createBasketsActions();
			case BASKETS_ID:
				return createBasketsByIdActions();
			case CUISINE_TYPES: 
				return createCuisineTypesActions();
			case CUISINE_TYPES_ID:
				return createCuisineTypesByIdActions();
			case MENUS: 
				return createMenusActions();
			case MENUS_ID:
				return createMenusByIdActions();
			case ORDER_HISTORY_ITEM_ACCESSORIES: 
				return createOrderHistoryItemAccessoriesActions();
			case ORDER_HISTORY_ITEM_ACCESSORIES_ID:
				return createOrderHistoryItemAccessoriesByIdActions();
			case ORDER_HISTORY_ITEM_MEALPARTS: 
				return createOrderHistoryItemMealpartsActions();
			case ORDER_HISTORY_ITEM_MEALPARTS_ID:
				return createOrderHistoryItemMealpartsByIdActions();
			case ORDER_HISTORY_ITEMS: 
				return createOrderHistoryItemsActions();
			case ORDER_HISTORY_ITEMS_ID:
				return createOrderHistoryItemsByIdActions();
			case ORDERS: 
				return createOrdersActions();
			case ORDERS_ID:
				return createOrdersByIdActions();
			case PAYMENT_LINES: 
				return createPaymentLinesActions();
			case PAYMENT_LINES_ID:
				return createPaymentLinesByIdActions();
			case PRODUCT_ACCESSORIES: 
				return createProductAccessoriesActions();
			case PRODUCT_ACCESSORIES_ID:
				return createProductAccessoriesByIdActions();
			case PRODUCT_CATEGORIES: 
				return createProductCategoriesActions();
			case PRODUCT_CATEGORIES_ID:
				return createProductCategoriesByIdActions();
			case PRODUCT_COMBO_OPTION_CHOICES: 
				return createProductComboOptionChoicesActions();
			case PRODUCT_COMBO_OPTION_CHOICES_ID:
				return createProductComboOptionChoicesByIdActions();
			case PRODUCT_COMBO_OPTIONS: 
				return createProductComboOptionsActions();
			case PRODUCT_COMBO_OPTIONS_ID:
				return createProductComboOptionsByIdActions();
			case PRODUCTS: 
				return createProductsActions();
			case PRODUCTS_ID:
				return createProductsByIdActions();
			case RECENTLY_VIEWED_RESTAURANTS: 
				return createRecentlyViewedRestaurantsActions();
			case RECENTLY_VIEWED_RESTAURANTS_ID:
				return createRecentlyViewedRestaurantsByIdActions();
			case RESTAURANT_DEALS: 
				return createRestaurantDealsActions();
			case RESTAURANT_DEALS_ID:
				return createRestaurantDealsByIdActions();
			case RESTAURANT_OPENING_TIMES: 
				return createRestaurantOpeningTimesActions();
			case RESTAURANT_OPENING_TIMES_ID:
				return createRestaurantOpeningTimesByIdActions();
			case RESTAURANTS: 
				return createRestaurantsActions();
			case RESTAURANTS_ID:
				return createRestaurantsByIdActions();
			case REVIEWS: 
				return createReviewsActions();
			case REVIEWS_ID:
				return createReviewsByIdActions();
			case SYS_EVENTS: 
				return createSysEventsActions();
			case SYS_EVENTS_ID:
				return createSysEventsByIdActions();
			case USER_DETAILS: 
				return createUserDetailsActions();
			case USER_DETAILS_ID:
				return createUserDetailsByIdActions();
			case ORDER_HISTORY_SUMMARY:
				return createOrderHistorySummaryActions();
			case ORDER_HISTORY_SUMMARY_ID: 
				return createOrderHistorySummaryByIdActions();
			case ORDER_SUMMARY:
				return createOrderSummaryActions();
			case ORDER_SUMMARY_ID: 
				return createOrderSummaryByIdActions();
			case PRODUCT_ACCESSORY_TYPES:
				return createProductAccessoryTypesActions();
			case PRODUCT_CATEGORIES_WITH_COUNT:
				return createProductCategoriesWithCountActions();
			case PRODUCT_CATEGORIES_WITH_COUNT_ID: 
				return createProductCategoriesWithCountByIdActions();
			case PRODUCTS_IN_BASKET:
				return createProductsInBasketActions();
			case PRODUCTS_IN_BASKET_ID: 
				return createProductsInBasketByIdActions();
			case PRODUCTS_IN_CATEGORIES:
				return createProductsInCategoriesActions();
			case PRODUCTS_IN_CATEGORIES_ID: 
				return createProductsInCategoriesByIdActions();
			case RESTAURANTS_AND_BASKET:
				return createRestaurantsAndBasketActions();
			case RESTAURANTS_AND_BASKET_ID: 
				return createRestaurantsAndBasketByIdActions();
			case ACCESSORIES_SELECTED_ACCESSORIES_SELECTED:
				return createAccessoriesSelectedActions();
			default:
				throw new UnsupportedOperationException("Unknown id: " + id);
    	}
    }
    
    protected ContentProviderActions createAddressSearchResultByIdActions() {
    	return new DefaultContentProviderActions(Sources.ADDRESS_SEARCH_RESULT, true, AddressSearchResultRecord.getFactory());
    }
    
    protected ContentProviderActions createAddressSearchResultActions() {
    	return new DefaultContentProviderActions(Sources.ADDRESS_SEARCH_RESULT, false, AddressSearchResultRecord.getFactory());
    }
    
    protected ContentProviderActions createBasketItemAccessoriesByIdActions() {
    	return new DefaultContentProviderActions(Sources.BASKET_ITEM_ACCESSORIES, true, BasketItemAccessoriesRecord.getFactory());
    }
    
    protected ContentProviderActions createBasketItemAccessoriesActions() {
    	return new DefaultContentProviderActions(Sources.BASKET_ITEM_ACCESSORIES, false, BasketItemAccessoriesRecord.getFactory());
    }
    
    protected ContentProviderActions createBasketItemMealpartsByIdActions() {
    	return new DefaultContentProviderActions(Sources.BASKET_ITEM_MEALPARTS, true, BasketItemMealpartsRecord.getFactory());
    }
    
    protected ContentProviderActions createBasketItemMealpartsActions() {
    	return new DefaultContentProviderActions(Sources.BASKET_ITEM_MEALPARTS, false, BasketItemMealpartsRecord.getFactory());
    }
    
    protected ContentProviderActions createBasketItemsByIdActions() {
    	return new DefaultContentProviderActions(Sources.BASKET_ITEMS, true, BasketItemsRecord.getFactory());
    }
    
    protected ContentProviderActions createBasketItemsActions() {
    	return new DefaultContentProviderActions(Sources.BASKET_ITEMS, false, BasketItemsRecord.getFactory());
    }
    
    protected ContentProviderActions createBasketTaxesByIdActions() {
    	return new DefaultContentProviderActions(Sources.BASKET_TAXES, true, BasketTaxesRecord.getFactory());
    }
    
    protected ContentProviderActions createBasketTaxesActions() {
    	return new DefaultContentProviderActions(Sources.BASKET_TAXES, false, BasketTaxesRecord.getFactory());
    }
    
    protected ContentProviderActions createBasketsByIdActions() {
    	return new DefaultContentProviderActions(Sources.BASKETS, true, BasketsRecord.getFactory());
    }
    
    protected ContentProviderActions createBasketsActions() {
    	return new DefaultContentProviderActions(Sources.BASKETS, false, BasketsRecord.getFactory());
    }
    
    protected ContentProviderActions createCuisineTypesByIdActions() {
    	return new DefaultContentProviderActions(Sources.CUISINE_TYPES, true, CuisineTypesRecord.getFactory());
    }
    
    protected ContentProviderActions createCuisineTypesActions() {
    	return new DefaultContentProviderActions(Sources.CUISINE_TYPES, false, CuisineTypesRecord.getFactory());
    }
    
    protected ContentProviderActions createMenusByIdActions() {
    	return new DefaultContentProviderActions(Sources.MENUS, true, MenusRecord.getFactory());
    }
    
    protected ContentProviderActions createMenusActions() {
    	return new DefaultContentProviderActions(Sources.MENUS, false, MenusRecord.getFactory());
    }
    
    protected ContentProviderActions createOrderHistoryItemAccessoriesByIdActions() {
    	return new DefaultContentProviderActions(Sources.ORDER_HISTORY_ITEM_ACCESSORIES, true, OrderHistoryItemAccessoriesRecord.getFactory());
    }
    
    protected ContentProviderActions createOrderHistoryItemAccessoriesActions() {
    	return new DefaultContentProviderActions(Sources.ORDER_HISTORY_ITEM_ACCESSORIES, false, OrderHistoryItemAccessoriesRecord.getFactory());
    }
    
    protected ContentProviderActions createOrderHistoryItemMealpartsByIdActions() {
    	return new DefaultContentProviderActions(Sources.ORDER_HISTORY_ITEM_MEALPARTS, true, OrderHistoryItemMealpartsRecord.getFactory());
    }
    
    protected ContentProviderActions createOrderHistoryItemMealpartsActions() {
    	return new DefaultContentProviderActions(Sources.ORDER_HISTORY_ITEM_MEALPARTS, false, OrderHistoryItemMealpartsRecord.getFactory());
    }
    
    protected ContentProviderActions createOrderHistoryItemsByIdActions() {
    	return new DefaultContentProviderActions(Sources.ORDER_HISTORY_ITEMS, true, OrderHistoryItemsRecord.getFactory());
    }
    
    protected ContentProviderActions createOrderHistoryItemsActions() {
    	return new DefaultContentProviderActions(Sources.ORDER_HISTORY_ITEMS, false, OrderHistoryItemsRecord.getFactory());
    }
    
    protected ContentProviderActions createOrdersByIdActions() {
    	return new DefaultContentProviderActions(Sources.ORDERS, true, OrdersRecord.getFactory());
    }
    
    protected ContentProviderActions createOrdersActions() {
    	return new DefaultContentProviderActions(Sources.ORDERS, false, OrdersRecord.getFactory());
    }
    
    protected ContentProviderActions createPaymentLinesByIdActions() {
    	return new DefaultContentProviderActions(Sources.PAYMENT_LINES, true, PaymentLinesRecord.getFactory());
    }
    
    protected ContentProviderActions createPaymentLinesActions() {
    	return new DefaultContentProviderActions(Sources.PAYMENT_LINES, false, PaymentLinesRecord.getFactory());
    }
    
    protected ContentProviderActions createProductAccessoriesByIdActions() {
    	return new DefaultContentProviderActions(Sources.PRODUCT_ACCESSORIES, true, ProductAccessoriesRecord.getFactory());
    }
    
    protected ContentProviderActions createProductAccessoriesActions() {
    	return new DefaultContentProviderActions(Sources.PRODUCT_ACCESSORIES, false, ProductAccessoriesRecord.getFactory());
    }
    
    protected ContentProviderActions createProductCategoriesByIdActions() {
    	return new DefaultContentProviderActions(Sources.PRODUCT_CATEGORIES, true, ProductCategoriesRecord.getFactory());
    }
    
    protected ContentProviderActions createProductCategoriesActions() {
    	return new DefaultContentProviderActions(Sources.PRODUCT_CATEGORIES, false, ProductCategoriesRecord.getFactory());
    }
    
    protected ContentProviderActions createProductComboOptionChoicesByIdActions() {
    	return new DefaultContentProviderActions(Sources.PRODUCT_COMBO_OPTION_CHOICES, true, ProductComboOptionChoicesRecord.getFactory());
    }
    
    protected ContentProviderActions createProductComboOptionChoicesActions() {
    	return new DefaultContentProviderActions(Sources.PRODUCT_COMBO_OPTION_CHOICES, false, ProductComboOptionChoicesRecord.getFactory());
    }
    
    protected ContentProviderActions createProductComboOptionsByIdActions() {
    	return new DefaultContentProviderActions(Sources.PRODUCT_COMBO_OPTIONS, true, ProductComboOptionsRecord.getFactory());
    }
    
    protected ContentProviderActions createProductComboOptionsActions() {
    	return new DefaultContentProviderActions(Sources.PRODUCT_COMBO_OPTIONS, false, ProductComboOptionsRecord.getFactory());
    }
    
    protected ContentProviderActions createProductsByIdActions() {
    	return new DefaultContentProviderActions(Sources.PRODUCTS, true, ProductsRecord.getFactory());
    }
    
    protected ContentProviderActions createProductsActions() {
    	return new DefaultContentProviderActions(Sources.PRODUCTS, false, ProductsRecord.getFactory());
    }
    
    protected ContentProviderActions createRecentlyViewedRestaurantsByIdActions() {
    	return new DefaultContentProviderActions(Sources.RECENTLY_VIEWED_RESTAURANTS, true, RecentlyViewedRestaurantsRecord.getFactory());
    }
    
    protected ContentProviderActions createRecentlyViewedRestaurantsActions() {
    	return new DefaultContentProviderActions(Sources.RECENTLY_VIEWED_RESTAURANTS, false, RecentlyViewedRestaurantsRecord.getFactory());
    }
    
    protected ContentProviderActions createRestaurantDealsByIdActions() {
    	return new DefaultContentProviderActions(Sources.RESTAURANT_DEALS, true, RestaurantDealsRecord.getFactory());
    }
    
    protected ContentProviderActions createRestaurantDealsActions() {
    	return new DefaultContentProviderActions(Sources.RESTAURANT_DEALS, false, RestaurantDealsRecord.getFactory());
    }
    
    protected ContentProviderActions createRestaurantOpeningTimesByIdActions() {
    	return new DefaultContentProviderActions(Sources.RESTAURANT_OPENING_TIMES, true, RestaurantOpeningTimesRecord.getFactory());
    }
    
    protected ContentProviderActions createRestaurantOpeningTimesActions() {
    	return new DefaultContentProviderActions(Sources.RESTAURANT_OPENING_TIMES, false, RestaurantOpeningTimesRecord.getFactory());
    }
    
    protected ContentProviderActions createRestaurantsByIdActions() {
    	return new DefaultContentProviderActions(Sources.RESTAURANTS, true, RestaurantsRecord.getFactory());
    }
    
    protected ContentProviderActions createRestaurantsActions() {
    	return new DefaultContentProviderActions(Sources.RESTAURANTS, false, RestaurantsRecord.getFactory());
    }
    
    protected ContentProviderActions createReviewsByIdActions() {
    	return new DefaultContentProviderActions(Sources.REVIEWS, true, ReviewsRecord.getFactory());
    }
    
    protected ContentProviderActions createReviewsActions() {
    	return new DefaultContentProviderActions(Sources.REVIEWS, false, ReviewsRecord.getFactory());
    }
    
    protected ContentProviderActions createSysEventsByIdActions() {
    	return new DefaultContentProviderActions(Sources.SYS_EVENTS, true, SysEventsRecord.getFactory());
    }
    
    protected ContentProviderActions createSysEventsActions() {
    	return new DefaultContentProviderActions(Sources.SYS_EVENTS, false, SysEventsRecord.getFactory());
    }
    
    protected ContentProviderActions createUserDetailsByIdActions() {
    	return new DefaultContentProviderActions(Sources.USER_DETAILS, true, UserDetailsRecord.getFactory());
    }
    
    protected ContentProviderActions createUserDetailsActions() {
    	return new DefaultContentProviderActions(Sources.USER_DETAILS, false, UserDetailsRecord.getFactory());
    }
    
    protected ContentProviderActions createOrderHistorySummaryByIdActions() {
    	return new DefaultContentProviderActions(Sources.ORDER_HISTORY_SUMMARY, true, OrderHistorySummaryRecord.getFactory());
    }
    
    protected ContentProviderActions createOrderHistorySummaryActions() {
    	return new DefaultContentProviderActions(Sources.ORDER_HISTORY_SUMMARY, false, OrderHistorySummaryRecord.getFactory());
    }
    
    protected ContentProviderActions createOrderSummaryByIdActions() {
    	return new DefaultContentProviderActions(Sources.ORDER_SUMMARY, true, OrderSummaryRecord.getFactory());
    }
    
    protected ContentProviderActions createOrderSummaryActions() {
    	return new DefaultContentProviderActions(Sources.ORDER_SUMMARY, false, OrderSummaryRecord.getFactory());
    }
    
    protected ContentProviderActions createProductAccessoryTypesActions() {
    	return new DefaultContentProviderActions(Sources.PRODUCT_ACCESSORY_TYPES, false, null);
    }
    
    protected ContentProviderActions createProductCategoriesWithCountByIdActions() {
    	return new DefaultContentProviderActions(Sources.PRODUCT_CATEGORIES_WITH_COUNT, true, ProductCategoriesWithCountRecord.getFactory());
    }
    
    protected ContentProviderActions createProductCategoriesWithCountActions() {
    	return new DefaultContentProviderActions(Sources.PRODUCT_CATEGORIES_WITH_COUNT, false, ProductCategoriesWithCountRecord.getFactory());
    }
    
    protected ContentProviderActions createProductsInBasketByIdActions() {
    	return new DefaultContentProviderActions(Sources.PRODUCTS_IN_BASKET, true, ProductsInBasketRecord.getFactory());
    }
    
    protected ContentProviderActions createProductsInBasketActions() {
    	return new DefaultContentProviderActions(Sources.PRODUCTS_IN_BASKET, false, ProductsInBasketRecord.getFactory());
    }
    
    protected ContentProviderActions createProductsInCategoriesByIdActions() {
    	return new DefaultContentProviderActions(Sources.PRODUCTS_IN_CATEGORIES, true, ProductsInCategoriesRecord.getFactory());
    }
    
    protected ContentProviderActions createProductsInCategoriesActions() {
    	return new DefaultContentProviderActions(Sources.PRODUCTS_IN_CATEGORIES, false, ProductsInCategoriesRecord.getFactory());
    }
    
    protected ContentProviderActions createRestaurantsAndBasketByIdActions() {
    	return new DefaultContentProviderActions(Sources.RESTAURANTS_AND_BASKET, true, RestaurantsAndBasketRecord.getFactory());
    }
    
    protected ContentProviderActions createRestaurantsAndBasketActions() {
    	return new DefaultContentProviderActions(Sources.RESTAURANTS_AND_BASKET, false, RestaurantsAndBasketRecord.getFactory());
    }
    
	protected ContentProviderActions createAccessoriesSelectedActions() {
		return new ContentProviderActions();
	}
	
}
